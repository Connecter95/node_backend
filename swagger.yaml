openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /api/users:
    get:
      summary: Retrieve all users
      tags:
      - User
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
      - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{userId}: 
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: integer
        description: ID of the user to be updated or deleted
    get:
      summary: Retrieve a specific user
      tags:
      - User
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      summary: Update a specific user
      tags:
      - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a specific user
      tags:
      - User
      responses:
        '204':
          description: User deleted successfully
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
          readOnly: true
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          example: john.doe@example.com
        createdAt:
          type: string
          example: "2024-03-17T12:07:02.000Z"
          readOnly: true
        updatedAt:
          type: string
          example: "2024-03-17T12:07:02.000Z"
          readOnly: true
      required:
        - firstName
        - lastName
        - email
